(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS f10mainLoad))
(VAR A B C D E F G H I J K L M N O P Q R S T U V W X Y Z A1 B1 C1 D1 E1 F1 G1 H1 I1 J1 K1 L1 M1 N1 O1 P1 Q1 R1 S1)
(RULES
  f1760findInvokeMethod0(A,B,C,D,E,F,G,H) -> Com_1(f1810findLoad(A,B,C,D,E,F,G,H))
  f1760findInvokeMethod1(A,B,C,D,E,F,G,H) -> Com_1(f1811findLoad(3 + A,C,D,A,B,E,G,H))
  f1760findInvokeMethod(A,B,C,D,E,F,G,H) -> Com_2(f1760findInvokeMethod0(D,E,B,C,F,F,G,H),f1760findInvokeMethod1(D,E,B,C,F,F,G,H)) :|: D >= 1 && A = 3 + D
  f1220loginInvokeMethod0(A,B,C,D,E,F,G,H) -> Com_1(f1280findLoad(A,B,C,D,E,F,G,H))
  f1220loginInvokeMethod1(A,B,C,D,E,F,G,H) -> Com_1(f1281findLoad(4 + A,C,A,F,G,B,D,E))
  f1220loginInvokeMethod(A,B,C,D,E,F,G,H) -> Com_2(f1220loginInvokeMethod0(E,C,B,F,G,J,D,H),f1220loginInvokeMethod1(E,C,B,F,G,J,D,H)) :|: B >= 1 && I >= 0 && D >= I + 1 && E >= 1 && A = 4 + E
  f1810findLoad(A,B,C,D,E,F,G,H) -> Com_1(f1760findInvokeMethod(A,B,D,A - 3,-J + B,E,G,H)) :|: D >= 0 && A >= 4 && A >= 1 && A >= 3 && J >= 0
  f10mainLoad(A,B,C,D,E,F,G,H) -> Com_1(f1220loginInvokeMethod(A,E,B,F,-4 + A,D,J,H)) :|
  f1280findLoad(A,B,C,D,E,F,G,H) -> Com_1(f1760findInvokeMethod(A,B,D,A - 3,-J + B,E,G,H)) :|: D >= 0 && A >= 4 && A >= 1 && A >= 3 && J >= 0
)
